<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAANgBAADYAQAAAAAAAAAA
        AAAAAAAAAAAAAC4hHQAqGA4KMiwysTg4R+04OEfoODhH6Dg4R+g4OEfoODhH7TIsMrEpGA4KLiEdAAAA
        AAAAAAAAAAAAAAAAAAAuIB4AKBUICDMuNaY6O0z5PkBU/z5BVf8+QVX/PkBU/zo7TPkzLjWmKBUICC4g
        HgAAAAAAAAAAAAAAAAAAAAAALCEfAD/D9gAmFw8VOjM3p1FUaP9UWG7/VFhu/1FUaP86MzenJhYPFf//
        /wAtISAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtIB4ARENMADMpKjw2MDV7U01P11NNT9c2MDV7MykqPENC
        TQAuIB0AAAAAAAAAAAAAAAAALREJAC4IBAstHBcmLRQQGi8AAAItFBMAAAAABHNrabNza2mzAAAABC0U
        EwAuAAACLRQPGi0cFyYuCAQLLREJAC0mJCksYnSrK4uq5it8l9YsRE1nLgAAAwAAAANza2mzc2tpswAA
        AAMvAAADLERNZyt8l9cri6rmLGJ0qy0mJCksVWOtKrDa/ynJ/P8pxff/K4Wh6C0oJzQAAAABc2tps3Nr
        abMAAAABLSgnNSuFoegpxff/Kcn8/yqw2v8sVWOsLEpa4yp2mf8rdpn/K3eb/ytlgf4sLzJf////AHNr
        abNza2mz////AC0vMl8rZYH+K3eb/yt2mf8rdpj/LEpa4y44RKsxS2HVMFFssjFQaMAwQ1XRLSouQQAA
        AAFza2mzc2tpswAAAAEtKi5CMERV0jJQacEyUmy0Mkth1S85RKtEMSwYRTczfFk4NA1JOTVNRDUwV0NC
        PgAAAAAEc2tps3NrabMAAAAEPz4/AEY3MlhGNjJMUy4qDUU3MnxLOTIZGQwKAEY7OWZLQT87Rjw5ckk+
        PCJGOzkAAAAABHNrabNza2mzAAAABEtBPwBOREIjRTs4ckY8OTlHPTtnAAAAAEU6OABJPzwyRjw5jUc9
        OnBwaWcDRzw6AAAAAARxaWezcWlnswAAAARPRUQAg319A0g+O3FEOjeLT0VDNEk/PQBaUlAAX1ZVCUA1
        Mqo/NDCHPDAqRDwwKkY0JyJLTkVCzE5FQ8w0JyJLPDAqRjwwKkRBNjKIQTc0rGliYQpkXFoAjYqHACca
        FAA4LChbUkY8519TRu9fU0fuU0c98FZQTvxWUU/8U0c98F9TR+5fU0bvUkY85zsvK1wfEQwAmpeVAAAA
        AAAvIx8ALiIfBzgsJzQ8MCpBPDAqQDMnIkVNRELKTkVCyjQnIkU8MCpAPDAqQTgsJzQuIh8HLyMfAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACwgHgAAAAABUEZEjFBGRIwAAAABLCAeAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4AcAAOAHAADgBwAA+B8AAIQhAAAAAAAAAAAAAAJAAAAAAAAABCAAAIQhAACEIQAAgAEAAMAD
        AADAAwAA/D8AAA==
</value>
  </data>
</root>