<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAANgBAADYAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAbg8fAG4YMAFyHz8DkQcXAG0wYgBtL2ILbkFwPW9HdUZuQnFFbkFwRm4/
        bkNtNGUcAAAAAAAAAAB6AAAAbDJnAG4gSgxsPnVbajx0mGo3bT+gAAABcFeBV3aXtex3or3yebjP8Xm6
        0PJ4tMvycm+VowAAAABuHUgAcAosBGw5bz1qWZquaXG79mJXn/9bVaHsY0GCjnBbhZV1k7H/c3aa/3iw
        yP94ssr/ebvR/3SFpsh9AAABbTBiJmpQjpBob7rrZojc/2eJ3f9gXKf/UmbA/1Vgtv1lXZn3eKnB/3eZ
        tP971eX/fOHv/3ze7f90hqfHa0R9amlnrdlng9T/Zo/l/2aP5f9niNv/YFyn/1Jmv/9RZ8L/YGer/3+T
        p/+QfoT/e9Di/3iwyP95uc//dIWmx2pZmsZmit//Zo/l/2aO5P9mjuT/Z4jb/2Bcp/9SZr//UWbB/2Bm
        qv95qsL/fKO5/3zg7/984e//fN7t/3SGp8dqW57HZovg/2aO5P9mjuT/Zo7k/2eI2/9gXKf/UmbA/1Fm
        wf9gZ6r/dZCv/3N1mv94scn/eLHJ/3m5z/90habHaluex2aL4P9mjuT/Zo7k/2aP5f9nh9r/YVqj/1Jm
        wP9RZ8L/YGap/3m80f94s8r/ecPY/3vX6P984e//dIWmx2pbnsdmi+D/Zo/l/2aP5f9ngtP/YWKr/1dL
        kf9YVKH/VGO6/1phrv9vj7f/hY2d/7CZfP+Ui4z6dZq34nJnjotqXJ7HZozh/2eI2/9nabL/V1KZ/0JU
        pv89WK3/RlGg/1VNlv9YWKf/VV60/2VbnP+TY2vCklpibWoiWSJrG1EKaleYyGZyv/9aWKD/TkuU/09I
        kP9FUqH/PFmu/ztasP8+V6v/Sk+b/1dQmv9ZV6b/ZDx7cl9IjgAAAAAAAAAAAGo7cqdVSY/7Plaq/zta
        sf9AVqn/TEyW/05Lk/9CVKb/PFmw/ztasf9CVKX/W0KD82w0aVxpOG8AAAAAAAAAAABsLl8XYDt3blBI
        j9lCVKb/O1mw/zxZr/9DU6T/TkqT/0tNmP9HUJ77VEWJw2M4cVJwLFoIbS9fAAAAAAAAAAAAih5BAOkA
        AABuMGImXT58kExMlus/Vqr/O1qw/0NTpf9aQYHaZjducHItXRRDSI0AtBElAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAdyhTAIgdPgRpNGk8WEKErVBJkOFcP32QajNnJ6INFQF5KlIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADGAAAAZTRrAHUrWA9vMGAsfSdOBncpVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+IAAAPAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABwAAAAcAAIAf
        AADgPwAA+P8AAA==
</value>
  </data>
</root>